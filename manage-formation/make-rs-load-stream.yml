- hosts: localhost
  connection: local
  gather_facts: false
  user: root
  pre_tasks:
    - include_vars: variables.yml
  vars:
    - container_path: ../container_files

  tasks:

    # Create resources
    - name: "Formation: pipeline-vpc-{{ aws_region }}-{{ production_env }}"
      cloudformation:
        stack_name: "pipeline-vpc-{{ aws_region }}-{{ production_env }}"
        state: "present"
        region: "{{ aws_region }}"
        disable_rollback: "{{ disable_rollback_bool }}"
        template: "./cf-configs/vpc.yml"
        create_timeout: "{{ create_timeout_min }}"
        template_parameters:
          ProductionEnvironment: "{{production_env}}"
      register: vpc_data

    - name: "Formation: security-config-{{ aws_region }}-{{ production_env }}"
      cloudformation:
        stack_name: "security-config-{{ aws_region }}-{{ production_env }}"
        state: "present"
        region: "{{ aws_region }}"
        disable_rollback: "{{ disable_rollback_bool }}"
        template: "./cf-configs/security-config.yml"
        create_timeout: "{{ create_timeout_min }}"
        template_parameters:
          ProductionEnvironment: "{{production_env}}"
      register: stack_iglu_access_sg

    - name: "return rs-load-service-{{ aws_region }}-{{ production_env }} to stream mode"
      cloudformation:
        stack_name: "rs-load-service-{{ aws_region }}-{{ production_env }}"
        state: "present"
        region: "{{ aws_region }}"
        disable_rollback: "{{ disable_rollback_bool }}"
        template: "./cf-configs/rs-load-service.yml"
        create_timeout: "{{ create_timeout_min }}"
        template_parameters:
          ProductionEnvironment: "{{production_env}}"
          AccessKey: "{{aws_access_key}}"
          SecretKey: "{{aws_secret_key}}"
          ECSHostGroupString: "{{ stack_iglu_access_sg.stack_outputs.ECSHostSecurityGroup }}"
          ECSHostVPC: "{{ vpc_data.stack_outputs.Subnet2 }}"